{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport { ButtonAdd } from \"../../components/ButtonAdd\";\nimport { Profile } from \"../../components/Profile\";\nimport { CategorySelect } from \"../../components/CategorySelect\";\nimport { styles } from \"./styles\";\nimport { ListHeader } from \"../../components/ListHeader\";\nimport { ListDevider } from \"../../components/ListDevider\";\nimport { Appointment } from \"../../components/Appointment\";\nimport { Background } from \"../../components/Background\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Home() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var navigation = useNavigation();\n  var appointments = [{\n    id: '1',\n    guild: {\n      id: '1',\n      name: 'Lendários',\n      icon: null,\n      owner: true\n    },\n    category: '1',\n    date: '22/06 ás 20:40',\n    description: 'É hoje que vamos chegar ao challanger  sem perder partida uma partida da md10'\n  }, {\n    id: '2',\n    guild: {\n      id: '1',\n      name: 'Lendários',\n      icon: null,\n      owner: true\n    },\n    category: '2',\n    date: '22/06 ás 20:40',\n    description: 'É hoje que vamos chegar ao challanger  sem perder partida uma partida da md10'\n  }];\n\n  function handleCategorySelect(categoryId) {\n    categoryId === category ? setCategory('') : setCategory(categoryId);\n  }\n\n  function handleAppointmentsDetails() {\n    navigation.navigate('AppointmentsDetails');\n  }\n\n  function handleAppointmentsCreate() {\n    navigation.navigate('AppointmentsCreate');\n  }\n\n  return _jsxs(Background, {\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Profile, {}), _jsx(ButtonAdd, {\n        onPress: handleAppointmentsCreate\n      })]\n    }), _jsx(CategorySelect, {\n      categorySelected: category,\n      setCategory: handleCategorySelect\n    }), _jsx(ListHeader, {\n      title: \"Partidas Agendadas\",\n      subtitle: \"Total 6\"\n    }), _jsx(FlatList, {\n      data: appointments,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Appointment, {\n          data: item,\n          onPress: handleAppointmentsDetails\n        });\n      },\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(ListDevider, {});\n      },\n      style: styles.matches,\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: {\n        paddingBottom: 50\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/home/vithor/Documents/Projects/nlw_together/Gameplay/src/screens/Home/index.tsx"],"names":["React","useState","useNavigation","ButtonAdd","Profile","CategorySelect","styles","ListHeader","ListDevider","Appointment","Background","Home","category","setCategory","navigation","appointments","id","guild","name","icon","owner","date","description","handleCategorySelect","categoryId","handleAppointmentsDetails","navigate","handleAppointmentsCreate","header","item","matches","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAKA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT;AACA,SAASC,OAAT;AACA,SAASC,cAAT;AACA,SAASC,MAAT;AACA,SAASC,UAAT;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,UAAT;;;AAEA,OAAO,SAASC,IAAT,GAAgB;AACnB,kBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,UAAU,GAAGZ,aAAa,EAAhC;AACA,MAAMa,YAAY,GAAG,CACjB;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,KAAK,EAAE;AACHD,MAAAA,EAAE,EAAE,GADD;AAEHE,MAAAA,IAAI,EAAE,WAFH;AAGHC,MAAAA,IAAI,EAAE,IAHH;AAIHC,MAAAA,KAAK,EAAE;AAJJ,KAFX;AAQIR,IAAAA,QAAQ,EAAE,GARd;AASIS,IAAAA,IAAI,EAAE,gBATV;AAUIC,IAAAA,WAAW,EAAE;AAVjB,GADiB,EAajB;AACIN,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,KAAK,EAAE;AACHD,MAAAA,EAAE,EAAE,GADD;AAEHE,MAAAA,IAAI,EAAE,WAFH;AAGHC,MAAAA,IAAI,EAAE,IAHH;AAIHC,MAAAA,KAAK,EAAE;AAJJ,KAFX;AAQIR,IAAAA,QAAQ,EAAE,GARd;AASIS,IAAAA,IAAI,EAAE,gBATV;AAUIC,IAAAA,WAAW,EAAE;AAVjB,GAbiB,CAArB;;AA4BA,WAASC,oBAAT,CAA8BC,UAA9B,EAAkD;AAG9CA,IAAAA,UAAU,KAAKZ,QAAf,GAA0BC,WAAW,CAAC,EAAD,CAArC,GAA4CA,WAAW,CAACW,UAAD,CAAvD;AACH;;AAED,WAASC,yBAAT,GAAoC;AAChCX,IAAAA,UAAU,CAACY,QAAX,CAAoB,qBAApB;AACH;;AAED,WAASC,wBAAT,GAAmC;AAC/Bb,IAAAA,UAAU,CAACY,QAAX,CAAoB,oBAApB;AACH;;AACD,SACI,MAAC,UAAD;AAAA,eAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEpB,MAAM,CAACsB,MAApB;AAAA,iBACI,KAAC,OAAD,KADJ,EAEI,KAAC,SAAD;AAAW,QAAA,OAAO,EAAED;AAApB,QAFJ;AAAA,MAFJ,EAOI,KAAC,cAAD;AACI,MAAA,gBAAgB,EAAEf,QADtB;AAGI,MAAA,WAAW,EAAEW;AAHjB,MAPJ,EAcI,KAAC,UAAD;AACI,MAAA,KAAK,EAAC,oBADV;AAEI,MAAA,QAAQ,EAAC;AAFb,MAdJ,EAmBI,KAAC,QAAD;AACI,MAAA,IAAI,EAAER,YADV;AAGI,MAAA,YAAY,EAAE,sBAAAc,IAAI;AAAA,eAAIA,IAAI,CAACb,EAAT;AAAA,OAHtB;AAII,MAAA,UAAU,EAAE;AAAA,YAAGa,IAAH,QAAGA,IAAH;AAAA,eACR,KAAC,WAAD;AAAa,UAAA,IAAI,EAAEA,IAAnB;AAAyB,UAAA,OAAO,EAAEJ;AAAlC,UADQ;AAAA,OAJhB;AAQI,MAAA,sBAAsB,EAAE;AAAA,eAAM,KAAC,WAAD,KAAN;AAAA,OAR5B;AASI,MAAA,KAAK,EAAEnB,MAAM,CAACwB,OATlB;AAUI,MAAA,4BAA4B,EAAE,KAVlC;AAYI,MAAA,qBAAqB,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB;AAZ3B,MAnBJ;AAAA,IADJ;AAoCH","sourcesContent":["import React, {useState} from 'react';\nimport { \n    View, \n    FlatList\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { ButtonAdd } from '../../components/ButtonAdd';\nimport { Profile } from '../../components/Profile';\nimport { CategorySelect } from '../../components/CategorySelect';\nimport { styles } from './styles';\nimport { ListHeader } from '../../components/ListHeader';\nimport { ListDevider } from '../../components/ListDevider';\nimport { Appointment } from '../../components/Appointment';\nimport { Background } from '../../components/Background';\n\nexport function Home() {\n    const [category, setCategory] = useState('');\n    const navigation = useNavigation();\n    const appointments = [\n        {\n            id: '1',\n            guild: {\n                id: '1',\n                name: 'Lendários',\n                icon: null,\n                owner: true\n            },\n            category: '1',\n            date: '22/06 ás 20:40',\n            description: 'É hoje que vamos chegar ao challanger  sem perder partida uma partida da md10'\n        },\n        {\n            id: '2',\n            guild: {\n                id: '1',\n                name: 'Lendários',\n                icon: null,\n                owner: true\n            },\n            category: '2',\n            date: '22/06 ás 20:40',\n            description: 'É hoje que vamos chegar ao challanger  sem perder partida uma partida da md10'\n        },\n        \n    ];\n\n    function handleCategorySelect(categoryId: string) {\n        //se o id atual é o mesmo que estou clicando então vou desmarcar ele \n        //entao atribua o novo id\n        categoryId === category ? setCategory('') : setCategory(categoryId)\n    }\n\n    function handleAppointmentsDetails(){\n        navigation.navigate('AppointmentsDetails');\n    }\n\n    function handleAppointmentsCreate(){\n        navigation.navigate('AppointmentsCreate');\n    }\n    return (\n        <Background>\n\n            <View style={styles.header}>\n                <Profile/>\n                <ButtonAdd onPress={handleAppointmentsCreate}/>\n            </View>\n            \n            <CategorySelect \n                categorySelected={category}\n                //função que vai atualizar o estad\n                setCategory={handleCategorySelect}\n            />\n\n  \n            <ListHeader\n                title='Partidas Agendadas'\n                subtitle='Total 6'\n            />\n        \n            <FlatList \n                data={appointments}\n                //pg do item a propriedade que quer eleger como ID\n                keyExtractor={item => item.id}\n                renderItem={({ item }) => (\n                    <Appointment data={item} onPress={handleAppointmentsDetails}/>\n                )}\n                //divisor de listas\n                ItemSeparatorComponent={() => <ListDevider/>}\n                style={styles.matches}\n                showsVerticalScrollIndicator={false}\n                //estibilização interna na lista\n                contentContainerStyle={{ paddingBottom: 50 }}\n            />\n        </Background>\n    );  \n}"]},"metadata":{},"sourceType":"module"}