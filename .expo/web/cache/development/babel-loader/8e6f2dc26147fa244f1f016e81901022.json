{"ast":null,"code":"import React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { theme } from \"../../global/styles/theme\";\nimport { Feather } from '@expo/vector-icons';\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Header(_ref) {\n  var title = _ref.title,\n      action = _ref.action;\n  var _theme$colors = theme.colors,\n      secondary100 = _theme$colors.secondary100,\n      secondary40 = _theme$colors.secondary40,\n      heading = _theme$colors.heading;\n  var navigation = useNavigation();\n\n  function handleGoBack() {\n    navigation.goBack();\n  }\n\n  return _jsxs(LinearGradient, {\n    style: styles.container,\n    colors: [secondary100, secondary40],\n    children: [_jsx(TouchableOpacity, {\n      activeOpacity: 0.7,\n      onPress: handleGoBack,\n      children: _jsx(Feather, {\n        name: \"arrow-left\",\n        size: 24,\n        color: heading\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: title\n    }), action ? _jsx(View, {\n      children: action\n    }) : _jsx(View, {\n      style: {\n        width: 20\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/home/vithor/Documents/Projects/nlw_together/Gameplay/src/components/Header/index.tsx"],"names":["React","useNavigation","LinearGradient","theme","Feather","styles","Header","title","action","colors","secondary100","secondary40","heading","navigation","handleGoBack","goBack","container","width"],"mappings":"AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,KAAT;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT;;;AASA,OAAO,SAASC,MAAT,OAAwC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,MAAgB,QAAhBA,MAAgB;AAC3C,sBAA6CL,KAAK,CAACM,MAAnD;AAAA,MAAOC,YAAP,iBAAOA,YAAP;AAAA,MAAqBC,WAArB,iBAAqBA,WAArB;AAAA,MAAkCC,OAAlC,iBAAkCA,OAAlC;AAEA,MAAMC,UAAU,GAAGZ,aAAa,EAAhC;;AAEA,WAASa,YAAT,GAAwB;AACpBD,IAAAA,UAAU,CAACE,MAAX;AACH;;AACD,SACI,MAAC,cAAD;AACI,IAAA,KAAK,EAAEV,MAAM,CAACW,SADlB;AAEI,IAAA,MAAM,EAAE,CAACN,YAAD,EAAeC,WAAf,CAFZ;AAAA,eAKI,KAAC,gBAAD;AAAkB,MAAA,aAAa,EAAE,GAAjC;AAAsC,MAAA,OAAO,EAAEG,YAA/C;AAAA,gBACI,KAAC,OAAD;AACI,QAAA,IAAI,EAAC,YADT;AAEI,QAAA,IAAI,EAAE,EAFV;AAGI,QAAA,KAAK,EAAEF;AAHX;AADJ,MALJ,EAaI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACE,KAApB;AAAA,gBACMA;AADN,MAbJ,EAiBMC,MAAM,GAEJ,KAAC,IAAD;AAAA,gBACKA;AADL,MAFI,GAMJ,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT;AAAb,MAvBR;AAAA,IADJ;AA4BH","sourcesContent":["import React, {ReactNode} from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Text, View, TouchableOpacity} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { theme } from '../../global/styles/theme';\nimport { Feather } from '@expo/vector-icons'\nimport { styles } from './styles';\n\ntype Props = {\n    title: string;\n    //vai ser um nó do react. Dessa forma posso passar de forma dinamica, oque posso inserir\n    //na interface que chamar o header\n    action?: ReactNode;\n}\n\nexport function Header({title, action}: Props) {\n    const {secondary100, secondary40, heading} = theme.colors;\n    \n    const navigation = useNavigation();\n\n    function handleGoBack() {\n        navigation.goBack();\n    }\n    return (\n        <LinearGradient\n            style={styles.container}\n            colors={[secondary100, secondary40]}\n        >\n            {/* Botão indicado para oq so vai conter icones */}\n            <TouchableOpacity activeOpacity={0.7} onPress={handleGoBack}>\n                <Feather\n                    name='arrow-left'\n                    size={24}\n                    color={heading}\n                />\n            </TouchableOpacity>\n\n            <Text style={styles.title}>\n                { title }\n            </Text>\n\n            { action \n                ?\n                <View>\n                    {action}\n                </View>\n                : \n                <View style={{ width: 20}}/>\n            }\n        </LinearGradient>\n    );  \n}"]},"metadata":{},"sourceType":"module"}