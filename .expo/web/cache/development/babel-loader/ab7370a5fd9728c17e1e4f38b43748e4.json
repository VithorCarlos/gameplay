{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DiscordImg from \"../../assets/discord.png\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ButtonIcon(_ref) {\n  var title = _ref.title,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsxs(TouchableOpacity, _objectSpread(_objectSpread({\n    style: styles.container\n  }, rest), {}, {\n    children: [_jsx(View, {\n      style: styles.iconWrapper,\n      children: _jsx(Image, {\n        source: DiscordImg,\n        style: styles.icon\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: title\n    })]\n  }));\n}","map":{"version":3,"sources":["/home/vithor/Documents/Projects/nlw_together/Gameplay/src/components/ButtonIcon/index.tsx"],"names":["React","DiscordImg","styles","ButtonIcon","title","rest","container","iconWrapper","icon"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AASA,OAAOC,UAAP;AACA,SAASC,MAAT;;;AAOA,OAAO,SAASC,UAAT,OAA8C;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAdC,IAAc;;AACjD,SAEI,MAAC,gBAAD;AACI,IAAA,KAAK,EAAEH,MAAM,CAACI;AADlB,KAGQD,IAHR;AAAA,eAKI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACK,WAApB;AAAA,gBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEN,UAAf;AAA2B,QAAA,KAAK,EAAEC,MAAM,CAACM;AAAzC;AADJ,MALJ,EASI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACE,KAApB;AAAA,gBACMA;AADN,MATJ;AAAA,KAFJ;AAgBH","sourcesContent":["import React from 'react';\nimport {\n    Text,\n    Image,\n    View,\n    TouchableOpacity,\n    TouchableOpacityProps\n} from 'react-native';\n\nimport DiscordImg from '../../assets/discord.png';\nimport { styles } from './styles';\n\n//recebe todas as propriedades de TouchableOpacityProps mais as que eu definir\ntype Props = TouchableOpacityProps & {\n    title: string;\n}\n\nexport function ButtonIcon({ title, ...rest}: Props) {\n    return (\n        //evento de click\n        <TouchableOpacity \n            style={styles.container}\n            //todo resto das propriedades. Um atalho do react\n            {...rest}\n        >\n            <View style={styles.iconWrapper}>\n                <Image source={DiscordImg} style={styles.icon} />\n            </View>\n\n            <Text style={styles.title}>\n                { title }\n            </Text>\n        </TouchableOpacity>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}