{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Feather } from '@expo/vector-icons';\nimport { styles } from \"./styles\";\nimport { theme } from \"../../global/styles/theme\";\nimport { Background } from \"../../components/Background\";\nimport { CategorySelect } from \"../../components/CategorySelect\";\nimport { Header } from \"../../components/Header\";\nimport { GuildIcon } from \"../../components/GuildIcon\";\nimport { SmallInput } from \"../../components/SmallInput\";\nimport { TextArea } from \"../../components/TextArea\";\nimport { Button } from \"../../components/Button\";\nimport { ModalView } from \"../../components/ModalView\";\nimport { Guilds } from \"../Guilds\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function AppointmentsCreate() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openGuildsModal = _useState4[0],\n      setOpenGuildsModal = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      guild = _useState6[0],\n      setGuild = _useState6[1];\n\n  function handleOpenGuilds() {\n    setOpenGuildsModal(true);\n  }\n\n  function handleCloseGuilds() {\n    setOpenGuildsModal(false);\n  }\n\n  function handleCategorySelect(categoryId) {\n    setCategory(categoryId);\n  }\n\n  function handleGuildSelect(guildSelect) {\n    setGuild(guildSelect);\n    setOpenGuildsModal(false);\n  }\n\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    children: [_jsx(Background, {\n      children: _jsxs(ScrollView, {\n        children: [_jsx(Header, {\n          title: \"Agendar Partida\"\n        }), _jsx(Text, {\n          style: [styles.label, {\n            marginLeft: 24,\n            marginTop: 36,\n            marginBottom: 18\n          }],\n          children: \"Categoria\"\n        }), _jsx(CategorySelect, {\n          hasCheckBox: true,\n          setCategory: handleCategorySelect,\n          categorySelected: category\n        }), _jsxs(View, {\n          style: styles.form,\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: 0.7,\n            onPress: handleOpenGuilds,\n            children: _jsxs(View, {\n              style: styles.select,\n              children: [guild.icon ? _jsx(GuildIcon, {}) : _jsx(View, {\n                style: styles.image\n              }), _jsx(View, {\n                style: styles.selectBody,\n                children: _jsx(Text, {\n                  style: styles.label,\n                  children: guild.name ? guild.name : 'Selecione um servidor'\n                })\n              }), _jsx(Feather, {\n                name: \"chevron-right\",\n                color: theme.colors.heading,\n                size: 18\n              })]\n            })\n          }), _jsxs(View, {\n            style: styles.field,\n            children: [_jsxs(View, {\n              children: [_jsx(Text, {\n                style: [styles.label, {\n                  marginBottom: 12\n                }],\n                children: \"Dia e m\\xEAs\"\n              }), _jsxs(View, {\n                style: styles.column,\n                children: [_jsx(SmallInput, {\n                  maxLength: 2\n                }), _jsx(Text, {\n                  style: styles.divider,\n                  children: \"/\"\n                }), _jsx(SmallInput, {\n                  maxLength: 2\n                })]\n              })]\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                style: [styles.label, {\n                  marginBottom: 12\n                }],\n                children: \"Hora e  minuto\"\n              }), _jsxs(View, {\n                style: styles.column,\n                children: [_jsx(SmallInput, {\n                  maxLength: 2\n                }), _jsx(Text, {\n                  style: styles.divider,\n                  children: \":\"\n                }), _jsx(SmallInput, {\n                  maxLength: 2\n                })]\n              })]\n            })]\n          }), _jsxs(View, {\n            style: [styles.field, {\n              marginBottom: 12\n            }],\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Descri\\xE7\\xE3o\"\n            }), _jsx(Text, {\n              style: styles.caractersLimit,\n              children: \"Max 100 caracteres\"\n            })]\n          }), _jsx(TextArea, {\n            multiline: true,\n            maxLength: 100,\n            numberOfLines: 5,\n            autoCorrect: false\n          }), _jsx(View, {\n            style: styles.footer,\n            children: _jsx(Button, {\n              title: \"Agendar\"\n            })\n          })]\n        })]\n      })\n    }), _jsx(ModalView, {\n      visible: openGuildsModal,\n      closeModal: handleCloseGuilds,\n      statusBarTranslucent: true,\n      children: _jsx(Guilds, {\n        handleGuildSelect: handleGuildSelect\n      })\n    })]\n  });\n}\nexport default AppointmentsCreate;","map":{"version":3,"sources":["/home/vithor/Documents/Projects/nlw_together/Gameplay/src/screens/AppointmentsCreate/index.tsx"],"names":["React","useState","Feather","styles","theme","Background","CategorySelect","Header","GuildIcon","SmallInput","TextArea","Button","ModalView","Guilds","AppointmentsCreate","category","setCategory","openGuildsModal","setOpenGuildsModal","guild","setGuild","handleOpenGuilds","handleCloseGuilds","handleCategorySelect","categoryId","handleGuildSelect","guildSelect","Platform","OS","container","label","marginLeft","marginTop","marginBottom","form","select","icon","image","selectBody","name","colors","heading","field","column","divider","caractersLimit","footer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { \n  Text, \n  View,\n  ScrollView,\n  Platform,\n  TouchableOpacity,\n  //p qd o teclado subir, fazer a interface subir junto\n  KeyboardAvoidingView\n } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { styles } from './styles';\nimport { theme } from '../../global/styles/theme';\nimport { Background } from '../../components/Background';\nimport { CategorySelect } from '../../components/CategorySelect';\nimport { Header } from '../../components/Header';\nimport { GuildIcon } from '../../components/GuildIcon';\nimport { SmallInput } from '../../components/SmallInput';\nimport { TextArea } from '../../components/TextArea';\nimport { Button } from '../../components/Button';\nimport { ModalView } from '../../components/ModalView';\nimport { GuildProps } from '../../components/Guild';\nimport { Guilds } from '../Guilds';\n\n\nexport function AppointmentsCreate(){\n  const [category, setCategory] = useState('');\n  const [openGuildsModal, setOpenGuildsModal] = useState(false);\n  //armazenar a guild selecionada do servidor. Começa com obj vazio do tipo GuildProps\n  const [guild, setGuild] = useState<GuildProps>({} as GuildProps);\n\n  function handleOpenGuilds(){\n    setOpenGuildsModal(true);\n  }\n\n  function handleCloseGuilds(){\n    setOpenGuildsModal(false);\n  }\n\n  function handleCategorySelect(categoryId: string) {\n    setCategory(categoryId)\n  }\n\n  function handleGuildSelect(guildSelect: GuildProps){\n    //para ter a guild selecionada\n    setGuild(guildSelect);\n    setOpenGuildsModal(false);\n  }\n\n  return (\n    <KeyboardAvoidingView \n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={styles.container}\n    >\n      <Background>\n        <ScrollView>\n            <Header title='Agendar Partida'/>\n\n            <Text style={[styles.label, \n              {marginLeft: 24, marginTop: 36, marginBottom: 18}]}\n            >\n              Categoria\n            </Text>\n\n          <CategorySelect\n            hasCheckBox \n            setCategory={handleCategorySelect}\n            categorySelected={category}\n          />\n\n          <View style={styles.form}>\n            <TouchableOpacity activeOpacity={0.7} onPress={handleOpenGuilds}> \n              <View style={styles.select}>\n                {\n                  guild.icon \n                  ? <GuildIcon/> \n                  : <View style={styles.image}/>\n                }\n              \n                <View style={styles.selectBody}> \n                  <Text style={styles.label}>\n                    {guild.name ? guild.name : 'Selecione um servidor'}\n                  </Text>                             \n                </View>\n\n              <Feather \n                name='chevron-right'\n                color={theme.colors.heading}\n                size={18}\n              />\n\n              </View>\n            </TouchableOpacity>\n            \n            <View style={styles.field}>\n              <View>\n                <Text style={[styles.label, {marginBottom: 12}]}>\n                  Dia e mês\n                </Text>\n                  <View style={styles.column}>\n                    <SmallInput maxLength={2}/>\n                    <Text style={styles.divider}>\n                      /\n                    </Text>\n                    <SmallInput maxLength={2}/>\n                </View >\n              </View>\n\n              <View>\n                <Text style={[styles.label, {marginBottom: 12}]}>\n                  Hora e  minuto\n                </Text>\n                  <View style={styles.column}>\n                    <SmallInput maxLength={2}/>\n                    <Text style={styles.divider}>\n                      :\n                    </Text>\n                    <SmallInput maxLength={2}/>\n                </View >\n              </View>\n            </View>\n\n            <View style={[styles.field, {marginBottom: 12}]}>\n              <Text style={styles.label}>\n                Descrição\n              </Text>\n\n              <Text style={styles.caractersLimit}>\n                Max 100 caracteres\n              </Text>   \n            </View>\n\n            <TextArea\n              multiline\n              maxLength={100}\n              numberOfLines={5}\n              autoCorrect={false}\n            />\n\n            <View style={styles.footer}>\n              <Button title='Agendar'/>\n            </View>\n\n          </View>\n        </ScrollView>\n      </Background>\n      <ModalView \n        visible={openGuildsModal}\n        closeModal={handleCloseGuilds}\n        statusBarTranslucent\n      >\n        <Guilds handleGuildSelect={handleGuildSelect}/>\n      </ModalView>\n    </KeyboardAvoidingView>\n  );\n}\n\nexport default AppointmentsCreate;"]},"metadata":{},"sourceType":"module"}