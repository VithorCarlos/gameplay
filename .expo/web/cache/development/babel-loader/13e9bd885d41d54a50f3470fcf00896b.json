{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"data\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { categories } from \"../../utils/categories\";\nimport { GuildIcon } from \"../GuildIcon\";\nimport { styles } from \"./styles\";\nimport PlayerSvg from \"../../assets/player.svg\";\nimport CalendarSvg from \"../../assets/calendar.svg\";\nimport { theme } from \"../../global/styles/theme\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Appointment(_ref) {\n  var data = _ref.data,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _categories$filter = categories.filter(function (item) {\n    return item.id === data.category;\n  }),\n      _categories$filter2 = _slicedToArray(_categories$filter, 1),\n      category = _categories$filter2[0];\n\n  var owner = data.guild.owner;\n  var _theme$colors = theme.colors,\n      primary = _theme$colors.primary,\n      on = _theme$colors.on,\n      secondary50 = _theme$colors.secondary50,\n      secondary70 = _theme$colors.secondary70;\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, rest), {}, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(LinearGradient, {\n        style: styles.guildIconContainer,\n        colors: [secondary50, secondary70],\n        children: _jsx(GuildIcon, {})\n      }), _jsxs(View, {\n        style: styles.content,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: data.guild.name\n          }), _jsx(Text, {\n            style: styles.category,\n            children: category.title\n          })]\n        }), _jsxs(View, {\n          style: styles.footer,\n          children: [_jsxs(View, {\n            style: styles.dateInfo,\n            children: [_jsx(CalendarSvg, {}), _jsx(Text, {\n              style: styles.date,\n              children: data.date\n            })]\n          }), _jsxs(View, {\n            style: styles.playerInfo,\n            children: [_jsx(PlayerSvg, {\n              fill: owner ? primary : on\n            }), _jsx(Text, {\n              style: [styles.player, {\n                color: owner ? primary : on\n              }],\n              children: owner ? 'Anfitrião' : 'Visitante'\n            })]\n          })]\n        })]\n      })]\n    })\n  }));\n}","map":{"version":3,"sources":["/home/vithor/Documents/Projects/nlw_together/Gameplay/src/components/Appointment/index.tsx"],"names":["React","categories","GuildIcon","styles","PlayerSvg","CalendarSvg","theme","LinearGradient","Appointment","data","rest","filter","item","id","category","owner","guild","colors","primary","on","secondary50","secondary70","container","guildIconContainer","content","header","title","name","footer","dateInfo","date","playerInfo","player","color"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAOA,SAASC,UAAT;AACA,SAASC,SAAT;AACA,SAASC,MAAT;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AAEA,SAASC,KAAT;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;AAcA,OAAO,SAASC,WAAT,OAA6C;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAdC,IAAc;;AAEhD,2BAAmBT,UAAU,CAACU,MAAX,CAAkB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYJ,IAAI,CAACK,QAArB;AAAA,GAAtB,CAAnB;AAAA;AAAA,MAAOA,QAAP;;AACA,MAAQC,KAAR,GAAkBN,IAAI,CAACO,KAAvB,CAAQD,KAAR;AACA,sBAAkDT,KAAK,CAACW,MAAxD;AAAA,MAAQC,OAAR,iBAAQA,OAAR;AAAA,MAAiBC,EAAjB,iBAAiBA,EAAjB;AAAA,MAAqBC,WAArB,iBAAqBA,WAArB;AAAA,MAAkCC,WAAlC,iBAAkCA,WAAlC;AAEA,SACI,KAAC,gBAAD,kCAAsBX,IAAtB;AAAA,cACG,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACmB,SAApB;AAAA,iBACI,KAAC,cAAD;AACK,QAAA,KAAK,EAAEnB,MAAM,CAACoB,kBADnB;AAEK,QAAA,MAAM,EAAE,CAAEH,WAAF,EAAeC,WAAf,CAFb;AAAA,kBAIK,KAAC,SAAD;AAJL,QADJ,EAOK,MAAC,IAAD;AAAM,QAAA,KAAK,EAAElB,MAAM,CAACqB,OAApB;AAAA,mBACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAErB,MAAM,CAACsB,MAApB;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEtB,MAAM,CAACuB,KAApB;AAAA,sBACMjB,IAAI,CAACO,KAAL,CAAWW;AADjB,YADJ,EAKI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAExB,MAAM,CAACW,QAApB;AAAA,sBACKA,QAAQ,CAACY;AADd,YALJ;AAAA,UADJ,EAWI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB,MAAM,CAACyB,MAApB;AAAA,qBACI,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEzB,MAAM,CAAC0B,QAApB;AAAA,uBACI,KAAC,WAAD,KADJ,EAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE1B,MAAM,CAAC2B,IAApB;AAAA,wBACKrB,IAAI,CAACqB;AADV,cAFJ;AAAA,YADJ,EAQI,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE3B,MAAM,CAAC4B,UAApB;AAAA,uBACI,KAAC,SAAD;AAAW,cAAA,IAAI,EAAGhB,KAAK,GAAGG,OAAH,GAAaC;AAApC,cADJ,EAGI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE,CACThB,MAAM,CAAC6B,MADE,EAET;AAAEC,gBAAAA,KAAK,EAAElB,KAAK,GAAGG,OAAH,GAAaC;AAA3B,eAFS,CAAb;AAAA,wBAIKJ,KAAK,GAAG,WAAH,GAAiB;AAJ3B,cAHJ;AAAA,YARJ;AAAA,UAXJ;AAAA,QAPL;AAAA;AADH,KADJ;AA4CH","sourcesContent":["import React from 'react';\nimport { \n    View, \n    Text,\n    TouchableOpacity,\n    TouchableOpacityProps\n} from 'react-native';\nimport { categories } from '../../utils/categories';\nimport { GuildIcon } from '../GuildIcon';\nimport { styles } from './styles';\nimport PlayerSvg from '../../assets/player.svg';\nimport CalendarSvg from '../../assets/calendar.svg';\nimport { GuildProps } from '../Guild';\nimport { theme } from '../../global/styles/theme';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nexport type AppointmentProps = {\n    id: string;\n    guild: GuildProps,\n    category: string,\n    date: string,\n    description: string\n};\n\ntype Props = TouchableOpacityProps & {\n    data: AppointmentProps\n};\n\nexport function Appointment({data, ...rest}: Props) {\n    //vai retornar uma coleção de um elemento só. pega a primeira posição\n    const [category] = categories.filter(item => item.id === data.category);\n    const { owner } = data.guild;\n    const { primary, on, secondary50, secondary70 } = theme.colors;\n\n    return (\n        <TouchableOpacity {...rest}>\n           <View style={styles.container}>\n               <LinearGradient\n                    style={styles.guildIconContainer}\n                    colors={[ secondary50, secondary70 ]}\n               >\n                    <GuildIcon />\n                </LinearGradient>\n                <View style={styles.content}>\n                    <View style={styles.header}>\n                        <Text style={styles.title}>\n                            { data.guild.name }\n                        </Text>\n\n                        <Text style={styles.category}>\n                            {category.title}\n                        </Text>\n                    </View>\n\n                    <View style={styles.footer}>\n                        <View style={styles.dateInfo}>\n                            <CalendarSvg />\n                            <Text style={styles.date}>\n                                {data.date}\n                            </Text>\n                        </View>\n\n                        <View style={styles.playerInfo}>\n                            <PlayerSvg fill={ owner ? primary : on}/>\n\n                            <Text style={[\n                                styles.player, \n                                { color: owner ? primary : on}\n                            ]}>\n                                {owner ? 'Anfitrião' : 'Visitante'}\n                            </Text>\n                        </View>\n                    </View>\n\n                </View>\n           </View>\n        </TouchableOpacity>\n    );\n}"]},"metadata":{},"sourceType":"module"}