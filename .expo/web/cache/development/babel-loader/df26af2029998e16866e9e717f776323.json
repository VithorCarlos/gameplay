{"ast":null,"code":"export var CryptoDigestAlgorithm;\n\n(function (CryptoDigestAlgorithm) {\n  CryptoDigestAlgorithm[\"SHA1\"] = \"SHA-1\";\n  CryptoDigestAlgorithm[\"SHA256\"] = \"SHA-256\";\n  CryptoDigestAlgorithm[\"SHA384\"] = \"SHA-384\";\n  CryptoDigestAlgorithm[\"SHA512\"] = \"SHA-512\";\n  CryptoDigestAlgorithm[\"MD2\"] = \"MD2\";\n  CryptoDigestAlgorithm[\"MD4\"] = \"MD4\";\n  CryptoDigestAlgorithm[\"MD5\"] = \"MD5\";\n})(CryptoDigestAlgorithm || (CryptoDigestAlgorithm = {}));\n\nexport var CryptoEncoding;\n\n(function (CryptoEncoding) {\n  CryptoEncoding[\"HEX\"] = \"hex\";\n  CryptoEncoding[\"BASE64\"] = \"base64\";\n})(CryptoEncoding || (CryptoEncoding = {}));","map":{"version":3,"sources":["../src/Crypto.types.ts"],"names":[],"mappings":"AAQA,OAAA,IAAY,qBAAZ;;AAAA,CAAA,UAAY,qBAAZ,EAAiC;AAI/B,EAAA,qBAAA,CAAA,MAAA,CAAA,GAAA,OAAA;AAIA,EAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,SAAA;AAIA,EAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,SAAA;AAIA,EAAA,qBAAA,CAAA,QAAA,CAAA,GAAA,SAAA;AAKA,EAAA,qBAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AAKA,EAAA,qBAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AAMA,EAAA,qBAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACD,CAjCD,EAAY,qBAAqB,KAArB,qBAAqB,GAAA,EAAA,CAAjC;;AAoCA,OAAA,IAAY,cAAZ;;AAAA,CAAA,UAAY,cAAZ,EAA0B;AACxB,EAAA,cAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AAIA,EAAA,cAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACD,CAND,EAAY,cAAc,KAAd,cAAc,GAAA,EAAA,CAA1B","sourcesContent":["// @needsAudit\n/**\n * [`Cryptographic hash function`](https://developer.mozilla.org/en-US/docs/Glossary/Cryptographic_hash_function)\n * is an algorithm that can be used to generate a checksum value. They have a variety of applications in cryptography.\n * > Cryptographic hash functions like [`SHA1`](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#SHA-1),\n * > `MD5` are **vulnerable**! Attacks have been proven to significantly reduce their collision resistance.\n * > Message-digest algorithms shouldn't be used for creating secure digests.\n */\nexport enum CryptoDigestAlgorithm {\n  /**\n   * `160` bits.\n   */\n  SHA1 = 'SHA-1',\n  /**\n   * `256` bits. Collision Resistant.\n   */\n  SHA256 = 'SHA-256',\n  /**\n   * `384` bits. Collision Resistant.\n   */\n  SHA384 = 'SHA-384',\n  /**\n   * `512` bits. Collision Resistant.\n   */\n  SHA512 = 'SHA-512',\n  /**\n   * `128` bits.\n   * @platform ios\n   */\n  MD2 = 'MD2',\n  /**\n   * `128` bits.\n   * @platform ios\n   */\n  MD4 = 'MD4',\n  /**\n   * `128` bits.\n   * @platform android\n   * @platform ios\n   */\n  MD5 = 'MD5',\n}\n\n// @needsAudit\nexport enum CryptoEncoding {\n  HEX = 'hex',\n  /**\n   * Has trailing padding. Does not wrap lines. Does not have a trailing newline.\n   */\n  BASE64 = 'base64',\n}\n\n// @needsAudit\nexport type CryptoDigestOptions = {\n  /**\n   * Format the digest is returned in.\n   */\n  encoding: CryptoEncoding;\n};\n\n// @docsMissing\nexport type Digest = string;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}